// Generated by diesel_ext

#![allow(unused)]
#![allow(clippy::all)]


use chrono::DateTime;
use chrono::offset::Utc;
use diesel::Queryable;
use diesel::Selectable;
use serde::Serialize;
use chrono::serde::ts_milliseconds;
use serde_with;
use serde::Serializer;

pub fn serialize_dt<S>(dt: &Option<DateTime<Utc>>, serializer: S) -> Result<S::Ok, S::Error>
where
    S: Serializer,
{
    if let Some(dt) = dt {
        dt.timestamp_millis().serialize(serializer)
    } else {
        serializer.serialize_none()
    }
}

#[derive(Queryable, Debug, Serialize)]
pub struct Post {
    pub id: i32,
    pub author: i32,
    pub blocks: Option<String>,
    #[serde(serialize_with = "serialize_dt")]
    pub created_at: Option<DateTime<Utc>>,
    #[serde(serialize_with = "serialize_dt")]
    pub updated_at: Option<DateTime<Utc>>,
    pub status: String,
}

#[derive(Queryable, Debug, Serialize)]
pub struct User {
    pub id: i32,
    pub username: String,
    pub display_name: Option<String>,
    pub about_me: Option<String>,
    pub description: Option<String>,
    pub avatar: Option<String>,
}